{
  "swagger": "2.0",
  "info": {
    "description": "API server for the CanU app",
    "version": "1.0.0",
    "title": "CanU",
    "contact": {
      "email": "canuproject@gmail.com"
    }
  },
  "host": "can-u.herokuapp.com",
  "basePath": "/",
  "tags": [
    {
      "name": "admin",
      "description": "Operations for admin level user"
    },
    {
      "name": "user",
      "description": "Operations for basic user"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/signup": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Sign up a new user",
        "description": "Adds a new user with required username, password, and email parameters",
        "operationId": "signup",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User object with username, password, and email that is saved to the database",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Invalid Username/Password"
          }
        }
      }
    },
    "/signin": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Sign in a user",
        "description": "Signs in a user and sends back a bearer token",
        "operationId": "signin",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Object containing username and password",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Invalid Username/Password"
          }
        }
      }
    },
    "/roles": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Adds roles to database",
        "description": "Saves roles to database to be referenced by users",
        "operationId": "roles",
        "responses": {
          "200": {
            "description": "Roles Saved"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Gets a list of all saved users",
        "description": "Allows admin to recieve all users",
        "operationId": "getUsers",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Recieves a list of all users"
          },
          "500": {
            "description": "Invalid Username/Password"
          }
        }
      }
    },
    "/deleteUser": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Delete user",
        "description": "Deletes a user based on username",
        "operationId": "deleteUsers",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Recieve the deleted user"
          },
          "500": {
            "description": "Invalid Username/Password"
          }
        }
      }
    },
    "/jobs": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get all jobs",
        "description": "Returns a json object with all jobs",
        "operationId": "findPetsByTags",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Recieve all saved jobs",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Job"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Post a job",
        "description": "Saves a job to the database",
        "operationId": "postJob",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "job object",
            "in": "body",
            "description": "Object containing job information",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Job"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created job",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Job"
              }
            }
          }
        }
      }
    },
    "/jobs/{jobId}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Find job by ID",
        "description": "Returns a single job",
        "operationId": "getPetById",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "ID of job to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns one job",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Job"
              }
            }
          },
          "404": {
            "description": "Job not found"
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Update pet by ID",
        "description": "Updates a single job",
        "operationId": "updateJobById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "ID of job to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "updatedJob",
            "in": "body",
            "description": "Object with info to update job with",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Job"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns updated job",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Job"
              }
            }
          },
          "404": {
            "description": "Job not found"
          }
        }
      }
    },
    "/jobs/bid/{jobId}": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Bid on a job",
        "description": "User can bid on a single job",
        "operationId": "bidJobById",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "ID of job to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "updatedJob",
            "in": "body",
            "description": "Object with info to update job with",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Job"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns updated job",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Job"
              }
            }
          },
          "404": {
            "description": "Job not found"
          }
        }
      }
    },
    "/jobs/close/{jobId}": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Close a job",
        "description": "User can close bidding on a job",
        "operationId": "closeJobById",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "ID of job to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "updatedJob",
            "in": "body",
            "description": "Object with info to update job with",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/Job"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns updated job",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          },
          "404": {
            "description": "Job not found"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
      "flow": "implicit",
      "scopes": {
        "write:pets": "modify pets in your account",
        "read:pets": "read your pets"
      }
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    },
    "basic_auth": {
      "type": "basic"
    }
  },
  "definitions": {
    "Job": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "price": {
          "type": "number",
          "format": "integer"
        },
        "currentBidder": {
          "type": "string",
          "default": ""
        },
        "jobType": {
          "type": "string"
        },
        "postedBy": {
          "type": "object"
        },
        "isOpen": {
          "type": "boolean",
          "default": "true"
        }
      },
      "xml": {
        "name": "Job"
      }
    },
    "Role": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "admin",
            "user"
          ]
        },
        "capabilities": {
          "type": "array",
          "items": {}
        }
      },
      "xml": {
        "name": "Role"
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "role": {
          "type": "string",
          "default": "user",
          "enum": [
            "admin",
            "user"
          ]
        },
        "jobs": {
          "type": "array",
          "items": {}
        }
      },
      "xml": {
        "name": "User"
      }
    }
  },
  "externalDocs": {
    "description": "Find more documentation about CanU",
    "url": "can-u.herokuapp.com/docs"
  }
}